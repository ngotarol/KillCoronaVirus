// <auto-generated />
using System;
using FCE_KillCoronaVirus.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCE_KillCoronaVirus.Migrations
{
    [DbContext(typeof(KillCoronaVirusContext))]
    [Migration("20220714030246_AgregarNombres")]
    partial class AgregarNombres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Atencion", b =>
                {
                    b.Property<int>("NroAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nroAtencion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroAtencion"), 1L, 1);

                    b.Property<string>("DatAtencion")
                        .HasColumnType("text")
                        .HasColumnName("datAtencion");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<int>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("idPac");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("NroAtencion");

                    b.HasIndex("IdPac");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Atencion", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.DetalleOrden", b =>
                {
                    b.Property<int>("IdDetOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetOrden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetOrden"), 1L, 1);

                    b.Property<int>("CodExa")
                        .HasColumnType("int")
                        .HasColumnName("codExa");

                    b.Property<int>("NroOrden")
                        .HasColumnType("int")
                        .HasColumnName("nroOrden");

                    b.HasKey("IdDetOrden");

                    b.HasIndex("CodExa");

                    b.HasIndex("NroOrden");

                    b.ToTable("detalleOrden", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.DetalleRecetum", b =>
                {
                    b.Property<int>("IdDetReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetReceta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetReceta"), 1L, 1);

                    b.Property<int>("CodFar")
                        .HasColumnType("int")
                        .HasColumnName("codFar");

                    b.Property<string>("Dosis")
                        .HasColumnType("text")
                        .HasColumnName("dosis");

                    b.Property<int>("NroReceta")
                        .HasColumnType("int")
                        .HasColumnName("nroReceta");

                    b.HasKey("IdDetReceta");

                    b.HasIndex("CodFar");

                    b.HasIndex("NroReceta");

                    b.ToTable("detalleReceta", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.EspecialidadMedico", b =>
                {
                    b.Property<int>("CodEsp")
                        .HasColumnType("int")
                        .HasColumnName("codEsp");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasIndex("CodEsp");

                    b.HasIndex("IdUsuario");

                    b.ToTable("EspecialidadMedico", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Especilidad", b =>
                {
                    b.Property<int>("CodEsp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codEsp");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodEsp"), 1L, 1);

                    b.Property<string>("NomEsp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomEsp");

                    b.HasKey("CodEsp");

                    b.ToTable("Especilidad", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Examan", b =>
                {
                    b.Property<int>("CodExa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codExa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodExa"), 1L, 1);

                    b.Property<int>("CodTipo")
                        .HasColumnType("int")
                        .HasColumnName("codTipo");

                    b.Property<string>("NomExa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nomExa");

                    b.HasKey("CodExa");

                    b.HasIndex("CodTipo");

                    b.ToTable("Examen");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Farmaco", b =>
                {
                    b.Property<int>("CodFar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codFar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFar"), 1L, 1);

                    b.Property<int>("CodPresentacion")
                        .HasColumnType("int")
                        .HasColumnName("codPresentacion");

                    b.Property<int>("CodUom")
                        .HasColumnType("int")
                        .HasColumnName("codUOM");

                    b.Property<double>("Concentracion")
                        .HasColumnType("float")
                        .HasColumnName("concentracion");

                    b.Property<string>("NomFar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomFar");

                    b.HasKey("CodFar");

                    b.HasIndex("CodPresentacion");

                    b.HasIndex("CodUom");

                    b.ToTable("Farmaco", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Orden", b =>
                {
                    b.Property<int>("NroOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nroOrden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroOrden"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("idPac");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("NroAtencion")
                        .HasColumnType("int")
                        .HasColumnName("nroAtencion");

                    b.HasKey("NroOrden");

                    b.HasIndex("IdPac");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("NroAtencion");

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Paciente", b =>
                {
                    b.Property<int>("IdPac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPac");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPac"), 1L, 1);

                    b.Property<string>("ApMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodSexo")
                        .HasColumnType("int")
                        .HasColumnName("codSexo");

                    b.Property<int>("EdadPac")
                        .HasColumnType("int")
                        .HasColumnName("edadPac");

                    b.Property<DateTime>("FecNacPac")
                        .HasColumnType("date")
                        .HasColumnName("fecNacPac");

                    b.Property<string>("NomPac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomPac");

                    b.Property<int>("RutPac")
                        .HasColumnType("int")
                        .HasColumnName("rutPac");

                    b.HasKey("IdPac");

                    b.HasIndex("CodSexo");

                    b.ToTable("Paciente", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.PresentacionFarmaco", b =>
                {
                    b.Property<int>("CodPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codPresentacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodPresentacion"), 1L, 1);

                    b.Property<string>("NomPresentacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomPresentacion");

                    b.HasKey("CodPresentacion");

                    b.ToTable("PresentacionFarmaco", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Recetum", b =>
                {
                    b.Property<int>("NroReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nroReceta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroReceta"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("idPac");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("NroAtencion")
                        .HasColumnType("int")
                        .HasColumnName("nroAtencion");

                    b.HasKey("NroReceta");

                    b.HasIndex("IdPac");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("NroAtencion");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Rol", b =>
                {
                    b.Property<int>("CodRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodRol"), 1L, 1);

                    b.Property<string>("NomRol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomRol");

                    b.HasKey("CodRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Sexo", b =>
                {
                    b.Property<int>("CodSexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codSexo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodSexo"), 1L, 1);

                    b.Property<string>("NomSexo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomSexo");

                    b.HasKey("CodSexo");

                    b.ToTable("Sexo", (string)null);
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.TipoExaman", b =>
                {
                    b.Property<int>("CodTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipo"), 1L, 1);

                    b.Property<string>("NomTipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nomTipo");

                    b.HasKey("CodTipo");

                    b.ToTable("TipoExamen");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.UnidadDeMedidum", b =>
                {
                    b.Property<int>("CodUom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUOM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUom"), 1L, 1);

                    b.Property<string>("NomUom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomUOM");

                    b.HasKey("CodUom");

                    b.ToTable("UnidadDeMedida");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<int>("CodRol")
                        .HasColumnType("int")
                        .HasColumnName("codRol");

                    b.Property<int>("CodSexo")
                        .HasColumnType("int")
                        .HasColumnName("codSexo");

                    b.Property<string>("NomUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomUsuario");

                    b.Property<int>("RutUsuario")
                        .HasColumnType("int")
                        .HasColumnName("rutUsuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CodRol");

                    b.HasIndex("CodSexo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Atencion", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Paciente", "IdPacNavigation")
                        .WithMany("Atencions")
                        .HasForeignKey("IdPac")
                        .IsRequired()
                        .HasConstraintName("FK_Atencion_Paciente");

                    b.HasOne("FCE_KillCoronaVirus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Atencions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Atencion_Usuarios");

                    b.Navigation("IdPacNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.DetalleOrden", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Examan", "CodExaNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("CodExa")
                        .IsRequired()
                        .HasConstraintName("FK_detalleOrden_Examen");

                    b.HasOne("FCE_KillCoronaVirus.Models.Orden", "NroOrdenNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("NroOrden")
                        .IsRequired()
                        .HasConstraintName("FK_detalleOrden_Orden");

                    b.Navigation("CodExaNavigation");

                    b.Navigation("NroOrdenNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.DetalleRecetum", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Farmaco", "CodFarNavigation")
                        .WithMany("DetalleReceta")
                        .HasForeignKey("CodFar")
                        .IsRequired()
                        .HasConstraintName("FK_detalleReceta_Farmaco");

                    b.HasOne("FCE_KillCoronaVirus.Models.Recetum", "NroRecetaNavigation")
                        .WithMany("DetalleReceta")
                        .HasForeignKey("NroReceta")
                        .IsRequired()
                        .HasConstraintName("FK_detalleReceta_Receta");

                    b.Navigation("CodFarNavigation");

                    b.Navigation("NroRecetaNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.EspecialidadMedico", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Especilidad", "CodEspNavigation")
                        .WithMany()
                        .HasForeignKey("CodEsp")
                        .IsRequired()
                        .HasConstraintName("FK_EspecialidadMedico_Especilidad");

                    b.HasOne("FCE_KillCoronaVirus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_EspecialidadMedico_Usuarios");

                    b.Navigation("CodEspNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Examan", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.TipoExaman", "CodTipoNavigation")
                        .WithMany("Examen")
                        .HasForeignKey("CodTipo")
                        .IsRequired()
                        .HasConstraintName("FK_Examen_TipoExamen");

                    b.Navigation("CodTipoNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Farmaco", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.PresentacionFarmaco", "CodPresentacionNavigation")
                        .WithMany("Farmacos")
                        .HasForeignKey("CodPresentacion")
                        .IsRequired()
                        .HasConstraintName("FK_Farmaco_PresentacionFarmaco");

                    b.HasOne("FCE_KillCoronaVirus.Models.UnidadDeMedidum", "CodUomNavigation")
                        .WithMany("Farmacos")
                        .HasForeignKey("CodUom")
                        .IsRequired()
                        .HasConstraintName("FK_Farmaco_UnidadDeMedida");

                    b.Navigation("CodPresentacionNavigation");

                    b.Navigation("CodUomNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Orden", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Paciente", "IdPacNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdPac")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Paciente");

                    b.HasOne("FCE_KillCoronaVirus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Usuarios");

                    b.HasOne("FCE_KillCoronaVirus.Models.Atencion", "NroAtencionNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("NroAtencion")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Atencion");

                    b.Navigation("IdPacNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("NroAtencionNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Paciente", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Sexo", "CodSexoNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("CodSexo")
                        .IsRequired()
                        .HasConstraintName("FK_Paciente_Sexo");

                    b.Navigation("CodSexoNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Recetum", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Paciente", "IdPacNavigation")
                        .WithMany("Receta")
                        .HasForeignKey("IdPac")
                        .IsRequired()
                        .HasConstraintName("FK_Receta_Paciente");

                    b.HasOne("FCE_KillCoronaVirus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Receta")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Receta_Usuarios");

                    b.HasOne("FCE_KillCoronaVirus.Models.Atencion", "NroAtencionNavigation")
                        .WithMany("Receta")
                        .HasForeignKey("NroAtencion")
                        .IsRequired()
                        .HasConstraintName("FK_Receta_Atencion");

                    b.Navigation("IdPacNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("NroAtencionNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Usuario", b =>
                {
                    b.HasOne("FCE_KillCoronaVirus.Models.Rol", "CodRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("CodRol")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_Rol");

                    b.HasOne("FCE_KillCoronaVirus.Models.Sexo", "CodSexoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("CodSexo")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_Sexo");

                    b.Navigation("CodRolNavigation");

                    b.Navigation("CodSexoNavigation");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Atencion", b =>
                {
                    b.Navigation("Ordens");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Examan", b =>
                {
                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Farmaco", b =>
                {
                    b.Navigation("DetalleReceta");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Orden", b =>
                {
                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Paciente", b =>
                {
                    b.Navigation("Atencions");

                    b.Navigation("Ordens");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.PresentacionFarmaco", b =>
                {
                    b.Navigation("Farmacos");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Recetum", b =>
                {
                    b.Navigation("DetalleReceta");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Sexo", b =>
                {
                    b.Navigation("Pacientes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.TipoExaman", b =>
                {
                    b.Navigation("Examen");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.UnidadDeMedidum", b =>
                {
                    b.Navigation("Farmacos");
                });

            modelBuilder.Entity("FCE_KillCoronaVirus.Models.Usuario", b =>
                {
                    b.Navigation("Atencions");

                    b.Navigation("Ordens");

                    b.Navigation("Receta");
                });
#pragma warning restore 612, 618
        }
    }
}
